{"version":3,"sources":["services/icon-service.js","components/Item.js","components/Inventory.js","services/dialog-service.js","services/item-service.js","components/App.js","serviceWorker.js","index.js"],"names":["CURSE_ICONS","Object","keys","reactIcons","filter","k","startsWith","map","ICON_MAP","event","item","ctx","locked","GiLockedBox","GiNewspaper","person","emote","GiSkullMask","GiPerson","food","GiOpenedFoodCan","juice","GiWaterBottle","dino","GiBestialFangs","GiPawPrint","skeleton","aliveType","GiDinosaurBones","GiSkeleton","FaBone","curse","date","length","music","GiMusicSpell","Item","props","index","preventDrag","hasOwnProperty","preventSelfDrag","Icon","icon","type","findItemIconSync","draggableId","String","id","isDragDisabled","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","className","classNames","hasConsumed","toLocaleDateString","style","marginTop","title","consumeVerb","join","message","Inventory","name","items","inventories","alwaysScrollable","height","window","innerWidth","droppableId","droppableProps","background","overflowY","minHeight","i","key","placeholder","DIALOG","suspicious","friendly","sedated","findAllDialogs","a","Error","MONTHS","randomChance","rng","chance","double","randomElement","array","Math","abs","int32","randomInsert","elements","splice","randomDate","start","end","dateString","Date","toDateString","getCSV","url","Promise","resolve","reject","Papa","parse","download","header","skipEmptyLines","complete","result","data","rngPeople","seedrandom","peopleListsPromise","all","process","then","rows","suspiciousDialogs","friendlyDialogs","sedatedDialogs","row","singer","year","month","day","this","some","willConsume","onConsume","onView","includes","convertFriendly","yearGroupsPromise","noSkeleton","song","parts","flat","keyFn","getFullYear","reduce","r","x","push","dinosaursPromise","dinos","omnivore","diet","toLowerCase","carnivore","herbivore","toUpperCase","replace","period","skeletonIcon","indexOf","applyInventory","foods","juices","group","getDate","randomTimeWitch","unshift","randomPerson","randomFood","randomDino","people","getZodiac","getMonth","zodiac","rngCurse","update","delta","attackTimer","randomCurse","backpack","attackCt","liftDate","setDate","updateQueue","setInterval","updateDelta","keyTimeTravelTimeout","Boolean","location","hostname","match","ReactDOM","render","now","useState","timeTravelClass","setTimeTravelClass","setYear","setMonth","setDay","todayItems","setTodayItems","todayOverrides","setTodayOverrides","travelDate","travelDateString","findItemsByDate","today","FaDog","setInventories","contexts","entries","forEach","queryArray","undefined","queryAny","uid","allItems","consumableItems","other","maxDay","min","sliders","slice","toString","padStart","onKeyDown","e","moveFocus","n","preventDefault","max","parseInt","target","element","document","getElementById","focus","keyCode","clearTimeout","setTimeout","Row","Col","md","opacity","get","set","label","subtle","xs","pointerEvents","value","onChange","onMouseDown","onMouseUp","onBlur","relatedTarget","onDragEnd","source","destination","list","startIndex","endIndex","Array","from","removed","reorder","assign","droppableSource","droppableDestination","sourceClone","destClone","move","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.5f2c3c86.chunk.js","sourcesContent":["import * as reactIcons from 'react-icons/all';\r\nimport {\r\n    FaBone,\r\n    GiBestialFangs,\r\n    GiDinosaurBones,\r\n    GiLockedBox,\r\n    GiMusicSpell,\r\n    GiNewspaper,\r\n    GiOpenedFoodCan,\r\n    GiPawPrint,\r\n    GiPerson,\r\n    GiSkeleton,\r\n    GiSkullMask,\r\n    GiWaterBottle\r\n} from 'react-icons/all';\r\n\r\nlet CURSE_ICONS = Object.keys(reactIcons)\r\n    .filter(k => k.startsWith('GiAbstract'))\r\n    .map(k => reactIcons[k]);\r\n\r\nlet ICON_MAP = {\r\n    event(item) {\r\n        if(item.ctx.locked) {\r\n            return GiLockedBox;\r\n        }\r\n        return GiNewspaper;\r\n    },\r\n    person(item) {\r\n        if(item.emote === 'witch') {\r\n            return GiSkullMask;\r\n        }\r\n        return GiPerson;\r\n    },\r\n    food() {\r\n        return GiOpenedFoodCan;\r\n    },\r\n    juice() {\r\n        return GiWaterBottle;\r\n    },\r\n    dino(item) {\r\n        return item.emote === 'angry' ? GiBestialFangs : GiPawPrint;\r\n    },\r\n    skeleton(item) {\r\n        return item.aliveType === 'dino' ? GiDinosaurBones :\r\n            item.aliveType === 'person' ? GiSkeleton\r\n                : FaBone;\r\n    },\r\n    curse(item) {\r\n        return CURSE_ICONS[+item.date % CURSE_ICONS.length];\r\n    },\r\n    music() {\r\n        return GiMusicSpell;\r\n    }\r\n};\r\n\r\nexport function findItemIconSync(item) {\r\n    return item.icon || (ICON_MAP.hasOwnProperty(item.type) ? ICON_MAP[item.type](item) : null);\r\n}","import React from 'react';\r\n\r\nimport './Item.scss';\r\nimport {Draggable} from 'react-beautiful-dnd';\r\nimport classNames from 'classnames/bind';\r\nimport {findItemIconSync} from '../services/icon-service';\r\nimport {AiFillLock, AiOutlineExclamation} from 'react-icons/all';\r\n\r\nexport default function Item(props) {\r\n    let {item, index} = props;\r\n\r\n    let {locked} = item.ctx;\r\n\r\n    let preventDrag = item.hasOwnProperty('preventDrag') && item.preventDrag();\r\n    let preventSelfDrag = item.hasOwnProperty('preventSelfDrag') && item.preventSelfDrag();\r\n    if(preventSelfDrag) {\r\n        locked = true;\r\n    }\r\n\r\n    let Icon = findItemIconSync(item);\r\n\r\n    return (\r\n        <Draggable draggableId={String(item.id)}\r\n                   index={index}\r\n                   isDragDisabled={locked}>\r\n            {(provided, snapshot) =>\r\n                <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}>\r\n                    <div className=\"py-1\">\r\n                        <div\r\n                            className={classNames('inventory-item noselect px-2 py-3 rounded-right rounded-bottom', item.emote, `consumed-${item.hasConsumed ? item.hasConsumed.length : 0}`, locked && 'locked')}>\r\n                            <h6 className=\"item-date text-white-50 float-right ml-3 mt-1 mb-0\">\r\n                                {locked && <AiFillLock className={classNames('mr-2', preventDrag && 'text-light time-wiggle')}/>}\r\n                                {typeof item.date == 'string' ? item.date : item.date && item.date.toLocaleDateString()}\r\n                            </h6>\r\n                            <h5 className={classNames('text-uppercase mb-1')}>\r\n                                {Icon && <Icon className=\"mr-2\" style={{marginTop: '-.25em'}}/>}\r\n                                {item.title}\r\n                            </h5>\r\n                            {item.hasConsumed && (\r\n                                <p className=\"text-white text-uppercase mt-1 float-right\">{item.consumeVerb || 'Ate'} {item.hasConsumed.map(item => item.title).join(', ')}</p>\r\n                            )}\r\n                            {item.message && (\r\n                                <p className=\"item-message mb-1\">{item.message}</p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </Draggable>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nimport Item from './Item';\r\nimport {Droppable} from 'react-beautiful-dnd';\r\n\r\nexport default function Inventory(props) {\r\n    let {name, inventories} = props;\r\n\r\n    let items = inventories[name];\r\n\r\n    let alwaysScrollable = name === 'backpack';\r\n    let height = window.innerWidth < 500 ? '35vh' : '60vh';\r\n\r\n    return (\r\n        <div className=\"inventory pt-3\">\r\n            <Droppable droppableId={name}>\r\n                {(provided, snapshot) => (\r\n                    <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                        <div style={{background: '#0002', height, overflowY: 'scroll'}}>\r\n                            <div className=\"p-3\" style={{minHeight: alwaysScrollable && '70vh'}}>\r\n                                {items.map((item, i) =>\r\n                                    <Item key={name + item.id} item={item} index={i}/>\r\n                                )}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </div>\r\n    );\r\n};\r\n","const DIALOG = {\r\n    suspicious: [\r\n        'Yeah, sure, sure.',\r\n        'Time traveler? I doubt it.',\r\n        'Okay then, McFly.',\r\n        'Seems like the paparazzi are getting desperate.',\r\n        'I have no reason to believe you.',\r\n        'Nice costume.',\r\n    ],\r\n    friendly: [\r\n        'What the heck...',\r\n        'How??',\r\n        'How is this possible?',\r\n        'Do you have flying cars yet?',\r\n        'It\\'s true!',\r\n        'I\\'m just not going to question this.',\r\n        'Is this a dream?',\r\n        'Wow. Okay. Time traveler. Fair enough.',\r\n        'I can\\'t believe it!',\r\n        'Do you have an extra seat?',\r\n        'Can you bring me along?',\r\n        'Please let me come with you.',\r\n        'Mind if I tag along?',\r\n        'It\\'s a miracle!',\r\n    ],\r\n    sedated: [\r\n        'Zzzzzz...',\r\n        'I\\'mma take a nap.',\r\n        'What did you put in this?',\r\n        'I don\\'t think that was juice.',\r\n        'Something isn\\'t right...',\r\n        'Whoa...',\r\n    ],\r\n    curse: [\r\n        'YOU HAVE TRESPASSED ON SACRED GROUND',\r\n        'TIME TRAVELERS ARE UNWELCOME HERE',\r\n        'BURN',\r\n        'BURN',\r\n        'BEGONE',\r\n        'GO',\r\n        'LEAVE',\r\n        'RUN',\r\n        'AWAY',\r\n        'FLEE',\r\n        'HEATHEN',\r\n        'TIME-CRAWLER',\r\n        'DESECRATOR',\r\n        'FOE OF THE TEMPORAL DEMON',\r\n        'DEFILER',\r\n        'YOU DID NOT LISTEN',\r\n        'BLOOD WILL BE SPILLED',\r\n        'WE DO NOT TAKE KINDLY TO YOUR PRESENCE',\r\n        'LEAVE WHILE YOU HAVE THE CHANCE',\r\n        'TIME-WEEVIL',\r\n        'FIEND',\r\n        'WE SHALL NOT BE CONTAINED',\r\n        'SACRIFICE',\r\n        'AWAY',\r\n        'THE BAT WILL FIND YOU',\r\n        'OUT',\r\n        'TOO FAR',\r\n        'REJOICE',\r\n        'YOUR KIND HAVE NO PLACE HERE',\r\n    ],\r\n};\r\n\r\nexport async function findAllDialogs(type) {\r\n    if(!DIALOG.hasOwnProperty(type)) {\r\n        throw new Error('Unknown dialog type: ' + type);\r\n    }\r\n    return DIALOG[type];\r\n}","import Papa from 'papaparse';\r\nimport seedrandom from 'seedrandom';\r\nimport {findAllDialogs} from './dialog-service';\r\nimport {GiSkullMask} from 'react-icons/all';\r\n\r\nexport const MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\nfunction groupBy(xs, keyFn) {\r\n    return xs.reduce((r, x) => {\r\n        let key = keyFn(x);\r\n        (r[key] = r[key] || []).push(x);\r\n        return r;\r\n    }, {});\r\n}\r\n\r\nfunction randomChance(rng, chance) {\r\n    return rng.double() <= chance;\r\n}\r\n\r\nfunction randomElement(rng, array) {\r\n    if(!array.length) {\r\n        throw new Error('Empty array');\r\n    }\r\n    return array[Math.abs(rng.int32()) % array.length];\r\n}\r\n\r\nfunction randomInsert(rng, array, ...elements) {\r\n    array.splice(Math.abs(rng.int32()) % (array.length + 1), 0, ...elements);\r\n}\r\n\r\nfunction randomDate(rng, start, end) {\r\n    let dateString = new Date(+start + rng.double() * (+end - start)).toDateString();\r\n    return new Date(dateString);\r\n}\r\n\r\nasync function getCSV(url) {\r\n    return new Promise(((resolve, reject) => {\r\n        return Papa.parse(url, {\r\n            download: true,\r\n            header: true,\r\n            skipEmptyLines: true,\r\n            complete(result) {\r\n                resolve(result.data);\r\n            },\r\n        });\r\n    }));\r\n}\r\n\r\nlet rngPeople = seedrandom('people');\r\n\r\nlet peopleListsPromise = Promise.all([\r\n    getCSV(process.env.PUBLIC_URL + '/data/singers.csv')\r\n        .then(async rows => {\r\n            let suspiciousDialogs = await findAllDialogs('suspicious');\r\n            let friendlyDialogs = await findAllDialogs('friendly');\r\n            let sedatedDialogs = await findAllDialogs('sedated');\r\n            return rows.map((row, i) => {\r\n                let person = {\r\n                    type: 'person',\r\n                    // id: 'singer' + i,\r\n                    title: row.singer,\r\n                    message: `\"${randomElement(rngPeople, suspiciousDialogs)}\"`,\r\n                    date: new Date(row.year, row.month - 1, row.day),\r\n                    emote: 'suspicious',\r\n                    consumeVerb: 'Sedated',\r\n                    preventSelfDrag() {\r\n                        if(this.hasConsumed) {\r\n                            return false;\r\n                        }\r\n                        return (this.ctx.name === 'today' && this.emote === 'suspicious')\r\n                            || this.ctx.inventories[this.ctx.name === 'today' ? 'backpack' : 'today']\r\n                                .some(item => item.willConsume && item.willConsume(this));\r\n                    },\r\n                    willConsume(item) {\r\n                        return !this.hasConsumed && item.type === 'juice';\r\n                    },\r\n                    onConsume(item) {\r\n                        this.message = `\"${randomElement(seedrandom(this.id), sedatedDialogs)}\"`;\r\n                        this.hasConsumed.length = 0;\r\n                    },\r\n                    onView() {\r\n                        if(this.emote === 'suspicious') {\r\n                            if(this.ctx.items.some(item => item.type === 'dino' || (['event', 'music'].includes(item.type) && +item.date > +this.date))) {\r\n                                this.convertFriendly();\r\n                            }\r\n                        }\r\n                    },\r\n                    convertFriendly() {\r\n                        this.emote = 'friendly';\r\n                        this.message = `\"${randomElement(seedrandom(this.id), friendlyDialogs)}\"`;\r\n                    }\r\n                };\r\n                if(randomChance(rngPeople, .4)) {\r\n                    person.convertFriendly();\r\n                }\r\n                return person;\r\n            });\r\n        }),\r\n]);\r\n\r\nconst yearGroupsPromise = Promise.all([\r\n    // getCSV('data/books.csv')\r\n    //     .then(rows => rows.map((row, i) => {\r\n    //         return {\r\n    //             type: 'book',\r\n    //             id: 'book' + i,\r\n    //             title: row.title,\r\n    //             message: row.authors,\r\n    //             date: new Date(row.year, row.month - 1, row.day),\r\n    //             emote: 'book',\r\n    //         };\r\n    //     })),\r\n    getCSV(process.env.PUBLIC_URL + '/data/headlines.csv')\r\n        .then(rows => rows.map((row, i) => {\r\n            return {\r\n                type: 'event',\r\n                // id: 'event' + i,\r\n                title: row.title,\r\n                date: new Date(row.year, row.month - 1, row.day),\r\n                noSkeleton: true,\r\n            };\r\n        })),\r\n    getCSV(process.env.PUBLIC_URL + '/data/songs.csv')\r\n        .then(rows => rows.map((row, i) => {\r\n            return {\r\n                type: 'music',\r\n                // id: 'music' + i,\r\n                title: row.song,\r\n                message: row.singer,\r\n                date: new Date(row.year, row.month - 1, row.day),\r\n                emote: 'music',\r\n                noSkeleton: true,\r\n            };\r\n        })),\r\n])\r\n    .then(parts => parts.flat())\r\n    .then(items => groupBy(items, item => item.date.getFullYear()));\r\n\r\nconst dinosaursPromise = getCSV(process.env.PUBLIC_URL + '/data/dinosaurs.csv')\r\n    .then(dinos => dinos.map(row => {\r\n        let omnivore = row.diet.toLowerCase().includes('omni');\r\n        let carnivore = row.diet.toLowerCase().includes('carni');\r\n        // let herbivore = row.diet.toLowerCase().includes('herbi');\r\n        let herbivore = !omnivore && !carnivore;\r\n        return {\r\n            type: 'dino',\r\n            title: row.name,\r\n            message: row.diet.toUpperCase().replace('?', ''),\r\n            date: row.period.toUpperCase(),\r\n            emote: carnivore ? 'angry' : 'neutral',\r\n            preventDrag() {\r\n                if(carnivore) {\r\n                    return !this.hasConsumed || this.hasConsumed.length < 3;\r\n                }\r\n                return this.ctx.name === 'today' && !this.hasConsumed;\r\n            },\r\n            willConsume({type}) {\r\n                return [\r\n                    ...(carnivore || omnivore ? ['dino', 'person'] : []),\r\n                    ...(herbivore || omnivore ? ['food'] : [])]\r\n                    .includes(type);\r\n            },\r\n            onConsume(item) {\r\n                if(!item.noSkeleton) {\r\n                    // setTimeout(() => {\r\n                    let skeleton = {\r\n                        // id: item.id + 'skeleton',\r\n                        type: 'skeleton',\r\n                        aliveType: item.type,\r\n                        title: item.title,\r\n                        message: 'Skeleton',\r\n                        icon: item.skeletonIcon,\r\n                    };\r\n                    let items = [...this.ctx.inventories[this.ctx.name]];\r\n                    items.splice(items.indexOf(this) + 1, 0, skeleton);\r\n                    this.ctx.applyInventory(this.ctx.name, items);\r\n                    // });\r\n                }\r\n            }\r\n        };\r\n    }));\r\n\r\nconst foods = ['Potato', 'Rice', 'Tofu', 'Corn', 'Carrot', 'Beans', 'Soylent', 'Lard', 'Quinoa'].map(name => ({\r\n    type: 'food',\r\n    title: name,\r\n    emote: 'food',\r\n    noSkeleton: true,\r\n}));\r\n\r\nconst juices = ['Orange', 'Apple', 'Lemon', 'Lime', 'Kiwi', 'Grape'].map(name => ({\r\n    type: 'juice',\r\n    title: name + ' Juice',\r\n    emote: 'juice',\r\n    noSkeleton: true,\r\n}));\r\n\r\nexport async function findItemsByDate(date) {\r\n    let group = (await yearGroupsPromise)[date.getFullYear()];\r\n    if(!group) {\r\n        return [];\r\n    }\r\n    let dateString = date.toDateString();\r\n    let items = group.filter(item => item.date.toDateString() === dateString);\r\n\r\n    if(items.length) {\r\n        let rng = seedrandom(dateString);\r\n\r\n        if(+date === +new Date(2015, 10 - 1, 21)) {\r\n            randomInsert(rng, items, {\r\n                type: 'person',\r\n                title: 'Doc Brown',\r\n                date,\r\n                message: '\"Great Scott!\"',\r\n                emote: 'friendly',\r\n            }, {\r\n                type: 'person',\r\n                title: 'Marty McFly',\r\n                date,\r\n                message: '\"This is heavy.\"',\r\n                emote: 'friendly',\r\n            });\r\n        }\r\n        else if(date.getDate() === 1) {\r\n            items.length = 0;\r\n            items.unshift(await randomTimeWitch(rng, date));\r\n        }\r\n        else if(randomChance(rng, .3)) {\r\n            randomInsert(rng, items, await randomPerson(rng, date));\r\n        }\r\n        else if(randomChance(rng, .3)) {\r\n            randomInsert(rng, items, await randomFood(rng, date));\r\n        }\r\n        else if(randomChance(rng, .3)) {\r\n            randomInsert(rng, items, await randomDino(rng, date));\r\n        }\r\n    }\r\n    return items;\r\n}\r\n\r\nasync function randomDino(rng, date) {\r\n    return randomElement(rng, await dinosaursPromise);\r\n}\r\n\r\nasync function randomPerson(rng, date) {\r\n    let people = randomElement(rng, await peopleListsPromise).filter(person => +person.date >= date);\r\n    let person;\r\n    if(people.length/* && randomChance(rng, .8)*/) {\r\n        person = randomElement(rng, people);\r\n    }\r\n    else {\r\n        person = {\r\n            type: 'person',\r\n            title: 'Gustav',\r\n            emote: 'friendly',\r\n        };\r\n    }\r\n    return {\r\n        ...person,\r\n        date,\r\n    };\r\n}\r\n\r\nasync function randomFood(rng, date) {\r\n    return randomChance(rng, .7)\r\n        ? {...randomElement(rng, foods)}\r\n        : {...randomElement(rng, juices)};\r\n}\r\n\r\nasync function randomTimeWitch(rng, date) {\r\n    // https://coursesweb.net/javascript/zodiac-signs_cs\r\n    function getZodiac(date) {\r\n        let [month, day] = [date.getMonth() + 1, date.getDate()];\r\n        let zodiac = ['', 'Capricorn', 'Aquarius', 'Pisces', 'Aries', 'Taurus', 'Gemini', 'Cancer', 'Leo', 'Virgo', 'Libra', 'Scorpio', 'Sagittarius', 'Capricorn'];\r\n        let last_day = ['', 19, 18, 20, 20, 21, 21, 22, 22, 21, 22, 21, 20, 19];\r\n        return (day > last_day[month]) ? zodiac[month + 1] : zodiac[month];\r\n    }\r\n\r\n    let rngCurse = seedrandom();\r\n    return {\r\n        type: 'person',\r\n        title: getZodiac(date) + ' Time Witch',\r\n        // message: randomElement(rng, await findAllDialogs('curse')),\r\n        emote: 'witch',\r\n        skeletonIcon: GiSkullMask,\r\n        preventDrag() {\r\n            return this.ctx.name !== 'backpack';\r\n        },\r\n        update(delta) {\r\n            this.attackTimer += delta;\r\n            if(this.attackTimer > 1.2) {\r\n                randomCurse(rngCurse, date).then(item => {\r\n                    this.ctx.applyInventory('backpack', [item, ...this.ctx.inventories.backpack]);\r\n                });\r\n                this.attackCt++;\r\n                if(this.attackCt > 3) {\r\n                    this.attackCt = 0;\r\n                    this.attackTimer = 0;\r\n                }\r\n            }\r\n        },\r\n        attackTimer: 0,\r\n        attackCt: 0,\r\n    };\r\n}\r\n\r\nasync function randomCurse(rng, date) {\r\n    let liftDate = randomDate(rng, new Date(2003, 1, 1), new Date(2020, 1, 1));\r\n    if(liftDate.getDate() === 1) {\r\n        liftDate.setDate(2);\r\n    }\r\n    return {\r\n        type: 'curse',\r\n        title: randomElement(rng, await findAllDialogs('curse')),\r\n        date: liftDate,\r\n        emote: 'cursed',\r\n        consumeVerb: 'Amended',\r\n        preventSelfDrag() {\r\n            return this.emote === 'cursed' && +this.date !== +this.ctx.date;\r\n        },\r\n        preventDrag() {\r\n            return this.emote === 'cursed' &&\r\n                !this.ctx.items.some(item => item.type === 'curse' && +item.date === +this.ctx.date);\r\n        },\r\n        willConsume(item) {\r\n            return this.emote === 'cursed' && (\r\n                (item.type === 'event' && +this.date === +item.date)\r\n                || item.type === 'music'\r\n            );\r\n        },\r\n        onConsume(item) {\r\n            this.emote = null;\r\n            this.hasConsumed.length = 0;\r\n        },\r\n    };\r\n}\r\n","import React, {useState} from 'react';\r\n\r\nimport './App.scss';\r\nimport {Col, Row} from 'react-bootstrap';\r\nimport Inventory from './Inventory';\r\nimport classNames from 'classnames/bind';\r\nimport uid from 'uid';\r\nimport {DragDropContext} from 'react-beautiful-dnd';\r\nimport {findItemsByDate, MONTHS} from '../services/item-service';\r\nimport {AiFillLock, FaBone, FaDog} from 'react-icons/all';\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n};\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n\r\n    return result;\r\n};\r\n\r\nconst updateQueue = [];\r\nconst updateDelta = .1;\r\nsetInterval(() => {\r\n    for(let i = 0; i < updateQueue.length; i++) {\r\n        updateQueue[i].update(updateDelta);\r\n    }\r\n    // updateQueue.length = 0;\r\n}, updateDelta * 1000);\r\n\r\nlet keyTimeTravelTimeout = null;\r\n\r\nexport default function App() {\r\n    let now = new Date();\r\n\r\n    let [timeTravelClass, setTimeTravelClass] = useState(null);\r\n\r\n    let [year, setYear] = useState(now.getFullYear());\r\n    let [month, setMonth] = useState(now.getMonth());\r\n    let [day, setDay] = useState(now.getDate());\r\n\r\n    let [todayItems, setTodayItems] = useState(null);\r\n    let [todayOverrides, setTodayOverrides] = useState({});\r\n\r\n    let travelDate = new Date(year, month, day);\r\n    let travelDateString = travelDate.toDateString();\r\n\r\n    if(todayOverrides.hasOwnProperty(travelDateString)) {\r\n        todayItems = todayOverrides[travelDateString];\r\n    }\r\n    else if(!todayItems) {\r\n        findItemsByDate(travelDate)\r\n            .then(items => setTodayItems(items));\r\n    }\r\n\r\n    let [inventories, setInventories] = useState({\r\n        today: [],\r\n        backpack: [\r\n            {\r\n                id: 'stevie-o',\r\n                type: 'person',\r\n                title: 'Stevie-o',\r\n                date: now,\r\n                icon: FaDog,\r\n                skeletonIcon: FaBone,\r\n                message: '\"Bark! Woof!\"',\r\n                emote: 'friendly',\r\n            },\r\n        ]\r\n    });\r\n    if(todayItems) {\r\n        inventories.today = todayItems;\r\n    }\r\n\r\n    let contexts = {};\r\n\r\n    updateQueue.length = 0;\r\n    Object.entries(inventories).forEach(([name, items]) => {\r\n        let ctx = {\r\n            date: travelDate,\r\n            name,\r\n            items,\r\n            inventories,\r\n            queryArray(key) {\r\n                return this.items.map(item =>\r\n                    item.hasOwnProperty(key)\r\n                        ? (typeof item[key] === 'function' ? item[key](ctx) : item[key])\r\n                        : undefined);\r\n            },\r\n            queryAny(key) {\r\n                return this.queryArray(key).some(a => a);\r\n            },\r\n            applyInventory(name, items) {\r\n                inventories[name] = items;\r\n\r\n                // TODO dry\r\n                if(name === 'today') {\r\n                    setTodayOverrides({\r\n                        ...todayOverrides,\r\n                        [travelDateString]: items,\r\n                    });\r\n                }\r\n                setInventories({...inventories});\r\n            },\r\n        };\r\n        contexts[name] = ctx;\r\n        items.forEach(item => {\r\n            if(!item.id) {\r\n                item.id = uid();\r\n            }\r\n            item.ctx = ctx;\r\n            if(item.onView) {\r\n                item.onView();\r\n            }\r\n            if(item.update) {\r\n                updateQueue.push(item);\r\n            }\r\n        });\r\n\r\n        let allItems = [...items];\r\n        let consumableItems = [...items];\r\n        allItems.forEach(item => {\r\n            if(item.willConsume) {\r\n                consumableItems.forEach((other, i) => {\r\n                    if(!other) {\r\n                        return;\r\n                    }\r\n                    if(item !== other && item.willConsume(other)) {\r\n                        consumableItems[i] = null;\r\n                        let index = items.indexOf(other);\r\n                        if(index !== -1) {\r\n                            items.splice(index, 1);\r\n                        }\r\n                        ctx.applyInventory(name, items);\r\n\r\n                        (item.hasConsumed = item.hasConsumed || []).push(other);\r\n                        if(item.hasOwnProperty('onConsume')) {\r\n                            item.onConsume(other);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        ctx.locked = ctx.queryAny('preventDrag');\r\n    });\r\n\r\n    function onDragEnd(result) {\r\n        let {source, destination} = result;\r\n\r\n        if(!destination) {\r\n            return;\r\n        }\r\n\r\n        if(source.droppableId === destination.droppableId) {\r\n            inventories[destination.droppableId] = reorder(\r\n                inventories[destination.droppableId],\r\n                source.index,\r\n                destination.index,\r\n            );\r\n        }\r\n        else {\r\n            let dropItem = inventories[source.droppableId][source.index];\r\n            dropItem.ctx = contexts[destination.droppableId];\r\n\r\n            Object.assign(inventories, move(\r\n                inventories[source.droppableId],\r\n                inventories[destination.droppableId],\r\n                source,\r\n                destination,\r\n            ));\r\n\r\n            // let destItems = [...inventories[destination.droppableId]];\r\n            // destItems.forEach(item => {\r\n            //     // item.ctx = contexts[destination.droppableId];\r\n            //     if(item.willConsume) {\r\n            //         destItems.forEach(other => {\r\n            //             if(item !== other && item.willConsume(other)) {\r\n            //\r\n            //                 let items = inventories[destination.droppableId];\r\n            //                 let index = items.indexOf(other);\r\n            //                 if(index !== -1) {\r\n            //                     items.splice(index, 1);\r\n            //                 }\r\n            //\r\n            //                 (item.hasConsumed = item.hasConsumed || []).push(other);\r\n            //                 if(item.hasOwnProperty('onConsume')) {\r\n            //                     item.onConsume(other);\r\n            //                 }\r\n            //             }\r\n            //         });\r\n            //     }\r\n            // });\r\n        }\r\n\r\n        //TODO dry\r\n        if(source.droppableId === 'today' || destination.droppableId === 'today') {\r\n            setTodayOverrides({\r\n                ...todayOverrides,\r\n                [travelDateString]: inventories.today,\r\n            });\r\n        }\r\n\r\n        setInventories({...inventories});\r\n    }\r\n\r\n    let [minYear, maxYear] = [2003, 2019];\r\n\r\n    let maxDay = new Date(year, +month + 1, 0).getDate();\r\n    day = Math.min(day, maxDay);\r\n\r\n    let sliders = [\r\n        [month, setMonth, 0, 11, MONTHS[month].toUpperCase().slice(0, 3), year > maxYear],\r\n        [day, setDay, 1, maxDay, day.toString().padStart(2, '0'), year > maxYear],\r\n        [year, setYear, minYear, maxYear, year],\r\n    ];\r\n\r\n    function onKeyDown(e) {\r\n        function moveFocus(n) {\r\n            e.preventDefault();\r\n            let index = Math.max(0, Math.min(sliders.length - 1, parseInt(e.target.id.slice(-1)) + n));\r\n            let element = document.getElementById(e.target.id.slice(0, -1) + index);\r\n            if(element) {\r\n                element.focus();\r\n            }\r\n        }\r\n\r\n        if(e.keyCode === 38) {// Up\r\n            moveFocus(-1);\r\n        }\r\n        else if(e.keyCode === 40) {// Down\r\n            moveFocus(1);\r\n        }\r\n\r\n        else if(e.keyCode === 37 || e.keyCode === 39) {// Left || Right\r\n            setTimeTravelClass('time-jump-' + (e.keyCode === 37 ? 'left' : 'right'));\r\n            clearTimeout(keyTimeTravelTimeout);\r\n            keyTimeTravelTimeout = setTimeout(() => {\r\n                setTimeTravelClass(null);\r\n            }, 200);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"pt-3 pb-1\" style={{background: '#0005'}}>\r\n                <Row className=\"text-center\">\r\n                    <Col md={1}/>\r\n                    <Col md={3} className=\"d-none d-md-block\">\r\n                        <h2 className=\"mb-0 text-primary text-left pt-1 mt-4 ml-5 cursor-default\">\r\n                            OUTSIDE\r\n                            {contexts.today.locked && (\r\n                                <AiFillLock className=\"text-light ml-3\" style={{marginTop: '-.25em', opacity: .6}}/>\r\n                            )}\r\n                        </h2>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <div className={classNames(timeTravelClass)}>\r\n                            <div className=\"form-group\">\r\n                                {sliders.map(([get, set, min, max, label, subtle], i) =>\r\n                                    <div key={i} className=\"px-3 pr-sm-5 px-md-0\">\r\n                                        <Row className=\"text-right text-info\">\r\n                                            <Col xs={2} className=\"pl-0\">\r\n                                                <label className=\"h5 mt-1 pt-2\">{label}</label>\r\n                                            </Col>\r\n                                            <Col xs={10} className=\"p-0\">\r\n                                                <input\r\n                                                    type=\"range\"\r\n                                                    id={'slider-' + i}\r\n                                                    className=\"form-control\"\r\n                                                    min={min}\r\n                                                    max={max}\r\n                                                    style={{opacity: subtle ? .2 : 1, pointerEvents: subtle && 'none'}}\r\n                                                    value={Math.min(max, Math.max(min, get))}\r\n                                                    onChange={e => {\r\n                                                        setTodayItems(null);\r\n                                                        setYear(Math.min(year, maxYear)); ///\r\n                                                        set(e.target.value);\r\n                                                    }}\r\n                                                    onMouseDown={() => setTimeTravelClass('time-traveling')}\r\n                                                    onMouseUp={() => setTimeTravelClass(null)}\r\n                                                    onKeyDown={onKeyDown}\r\n                                                    onBlur={e => e.relatedTarget || e.target.focus()}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={3} className=\"d-none d-md-block\">\r\n                        <h2 className=\"text-primary text-right pt-1 mt-4 mr-5 cursor-default\">\r\n                            {contexts.backpack.locked && (\r\n                                <AiFillLock className=\"text-light mr-3\" style={{marginTop: '-.25em', opacity: .6}}/>\r\n                            )}\r\n                            INSIDE\r\n                        </h2>\r\n                    </Col>\r\n                    <Col md={1}/>\r\n                </Row>\r\n            </div>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n                <div className={classNames(timeTravelClass)}>\r\n                    <Row>\r\n                        <Col md={1}/>\r\n                        <Col md={5}>\r\n                            {inventories.today && travelDate.getFullYear() <= maxYear && (\r\n                                <Inventory name=\"today\" inventories={inventories}/>\r\n                            )}\r\n                        </Col>\r\n                        <Col md={5}>\r\n                            <Inventory name=\"backpack\" inventories={inventories}/>\r\n                        </Col>\r\n                        <Col md={1}/>\r\n                    </Row>\r\n                </div>\r\n            </DragDropContext>\r\n        </div>\r\n    );\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.scss';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}